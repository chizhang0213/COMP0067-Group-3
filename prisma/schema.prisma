generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb://localhost:27017/marking"
}

type ProjectsProjects {
  TAId         String
  codeLink     String
  leader       Int
  projectTitle String
  teamMember   Int[]
  teamNo       Int
}

type SchemeComponents {
  isDistributed Boolean
  name          String
  questions     SchemeComponentsQuestions[]
  type          String
  weight        Int
}

type SchemeComponentsQuestions {
  description String
  detail      SchemeComponentsQuestionsDetail?
  isOptional  Boolean
  marker      String
  placeholder String?
  qType       String
  title       String
}

type SchemeComponentsQuestionsDetail {
  dropdown   String[]
  percentage String
  shortAns   String
}

model admin {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  firstName String
  lastName  String
  password  String
  username  String
}

model grades {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  /// Nested objects had no data in the sample dataset to introspect a nested type.
  TAMark            Json
  /// Nested objects had no data in the sample dataset to introspect a nested type.
  TAMarkComponent   Json
  /// Nested objects had no data in the sample dataset to introspect a nested type.
  TAMarkFinal       Json
  /// Nested objects had no data in the sample dataset to introspect a nested type.
  TAMarkIndividual  Json
  /// Nested objects had no data in the sample dataset to introspect a nested type.
  lecMark           Json
  /// Nested objects had no data in the sample dataset to introspect a nested type.
  lecMarkComponent  Json
  /// Nested objects had no data in the sample dataset to introspect a nested type.
  lecMarkFinal      Json
  /// Nested objects had no data in the sample dataset to introspect a nested type.
  lecMarkIndividual Json
  moduleId          String
  /// Nested objects had no data in the sample dataset to introspect a nested type.
  peerReview        Json
  projectTitle      String
  status            String
  teamNo            Int
}

model modules {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  Lecturers    String[]
  TAs          String[]
  academicYear Int
  createdLec   String
  moduleNo     String
  students     Int[]
  title        String
}

model projects {
  id       String             @id @default(auto()) @map("_id") @db.ObjectId
  moduleId String
  projects ProjectsProjects[]
}

model scheme {
  id         String             @id @default(auto()) @map("_id") @db.ObjectId
  components SchemeComponents[]
  moduleId   String
}

model staff {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  firstName String
  isActive  Boolean
  lastName  String
  uerType   String?
  userType  String?
}

model students {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  firstName String
  lastName  String
  photo     String
  uclId     Int
}

model user {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}
